; vim: ft=gitconfig

[user]
  name = Sam Merrell
  email = merrell.sam@gmail.com
  signingkey = merrell.sam@gmail.com

[commit]
    gpgsign = true

[core]
  excludesfile = ~/.gitignore_global
  autocrlf = input

[help]
  # git lgo corrected to git log. Yay!
  autocorrect = -1

[color]
  pager = true
  status = auto
  branch = auto
  diff = auto
  interactive = auto

[fetch]
  prune = true

;[push]
  ;default = tracking

[pull]
  ff = only

[merge]
  tool = p4merge

[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  trustExitCode = false
  keepTemporaries = false
  keepBackup = false

[diff]
  tool = p4merge
  renames = copies
  renamelimit = 2785

[difftool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"

[alias]
  # Work flows

  blatest = !sh -c 'git checkout ${1:-master} && git fetch origin && git merge origin/${1:-master} --ff-only' -
  brebase = !sh -c 'git checkout ${1:-master} && git fetch origin && git merge origin/${1:-master} --ff-only && git checkout @{-1} && git rebase ${1:-master}' -

  # Github workflows

  upmaster = !git checkout master && git fetch upstream && git merge upstream/master --ff-only && git push origin HEAD
  uprebase = !git checkout master && git fetch upstream && git merge upstream/master --ff-only && git push origin HEAD &&  git checkout @{-1} && git rebase master

  # Log aliases

  lg = log --graph --pretty=format:'%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%cr) %C(cyan)[%an]%C(reset)' --abbrev-commit --date=relative --decorate
  ll = log --pretty=format:'%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%cr) %C(cyan)[%an]%C(reset)' --abbrev-commit --date=relative --decorate
  lstat = log --name-status --abbrev-commit --date=local --pretty=format:'%C(yellow)%h%C(red)%d%C(reset) %C(cyan)%cr %C(green)[%cn] %Creset%C(yellow)%n%s'

  # Working with files / history

  revive = !sh -c 'git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"' -
  new = log --pretty=format:'%C(yellow)%h%C(reset) - %s %C(green)(%cr) %C(cyan)[%an]%C(reset)' --abbrev-commit --date=relative --decorate master..
  lnew = log master.. --reverse
  di = diff --staged

  # Misc

  fmerge = merge --ff-only
  stache = stash save -u
  cia = commit --amend -C HEAD
  rbc = rebase --continue

[log]
  date = local

[github]
  user = smerrell

[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f

[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true

